@page "/addorupdate"
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using System.Text.RegularExpressions

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h4">Ajouter un vol</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudSelect T="Compagnie" Label="Compagnie" @bind-Value="@customer.Compagnie" Required="true">
            @foreach (var selectItem in StaticsElements.CmpsBase)
            {
                <MudSelectItem Value="@selectItem">@selectItem.Name</MudSelectItem>
            }
        </MudSelect>
        <MudDatePicker Orientation="Orientation.Portrait" Label="Dernier jous de confirmation" @bind-Date="customer.DateFin" />

        <MudTextField RequiredError="User name is required!" @bind-Value="customer.VilleDepart" Label="Ville de départe" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="customer.VilleArrivee" Label="Ville d'arrivée" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="customer.JourDeVol" Label="Jours de Vols" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>


        <br />

        <div class="align-content-center btn-group">

            <MudButton Variant="Variant.Filled" Color="Color.Error" @onclick="@(() => NavigationManager.NavigateTo("index"))">Annuler</MudButton>
            <MudButton Class="ml-1" Variant="Variant.Filled" Color="Color.Success" @onclick="Valider">Valider</MudButton>
        </div>

    </MudCardContent>
</MudCard>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!" />
                <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!"
                              Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
                <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!" />
                <div class="d-flex">
                    <MudRadioGroup T="string" Required="true" RequiredError="Account type is required!">
                        <MudRadio Option="@("Personal")">Personal</MudRadio>
                        <MudRadio Option="@("Professional")">Professional</MudRadio>
                    </MudRadioGroup>
                </div>
                <div class="d-flex align-center justify-space-between mt-6">
                    <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Class="ml-n2" Label="I agree!" />
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
                </div>
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-2">Reset</MudButton>
            <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>




@code {
    private VolConfirmeViewModel customer = new VolConfirmeViewModel();

    protected override void OnInitialized()
    {
        customer.DateFin = DateTime.Now;
        base.OnInitialized();
    }

    public void Valider()
    {

    }

    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }
}
